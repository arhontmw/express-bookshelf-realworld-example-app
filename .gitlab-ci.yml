# стадии нашего pipeline. Для группировки jobs.
# Нужно помнить, что stages выполняются последовательно, а job параллельно.
stages:
  # укажем одну стадию с именем test
  - test

cache:
  key:
    files:
      - package-lock.json # используем хеш файла как ключ кеша
  paths:
    - .npm/ # указываем, что именно кешировать

before_script:
  - npm ci --cache .npm --prefer-offline

# создадим job с именем eslint
eslint:
  # укажем нужный Docker образ
  image: node:14.17.0-alpine
  # добавим ее в стадию test
  stage: test
  # укажем переменные окружения. В отличие от GitHub, в GitLab
  # переменные окружения являются постоянными для всей job.
  variables:
    NODE_VERSION: 14.17.0
  # секция script описывает шаги
  script:
    # установка зависимостей
    - npm install # будет использовать кеш
    # запуск ESLint
    - npm run lint

# создадим job с именем prettier
prettier:
  # укажем нужный Docker образ
  image: node:14.17.0-alpine
  # добавим ее в стадию test
  stage: test
  # укажем переменные окружения. В отличие от GitHub, в GitLab
  # переменные окружения являются постоянными для всей job.
  variables:
    NODE_VERSION: 14.17.0
  # секция script описывает шаги
  script:
    # установка зависимостей
    - npm install # будет использовать кеш
    # запуск Prettier
    - npm run check:format
